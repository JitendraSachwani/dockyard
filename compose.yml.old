version: "3.8"

x-timezone-env-var: &timezone-env-var TZ=Etc/UTC

x-common-media-volume: &common-media-volume /media/mediaserver:/media

x-common-download-volume: &common-download-volume /media/mediaserver/MediaShare/Downloads:/downloads

x-common-logging: &common-logging
  logging:
    driver: "json-file"
    options:
      max-size: 10m
      max-file: "3"

x-common-config: &common-config
  user: 1000:1000
  networks:
    - bridge_net_1
  profiles:
    - prod
  restart: unless-stopped
  <<: *common-logging

x-common-network: &common-network
  networks:
    - bridge_net_1

services:
  pangolin:
    image: fosrl/pangolin:1.5.0
    hostname: pangolin
    <<: [*common-config, *common-network]
    profiles: ["dev"]
    environment:
      - *timezone-env-var
    volumes:
      - ./config/pangolin:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/"]
      interval: "3s"
      timeout: "3s"
      retries: 15
    ports:
      - 3000:3000
      - 3001:3001
      - 3002:3002
  cloudflared:
    image: cloudflare/cloudflared:latest
    hostname: cloudflared
    <<: [*common-config, *common-network]
    profiles: ["dev"]
    depends_on:
      pangolin:
        condition: service_healthy
    user: 1000:1000
    command: tunnel --no-autoupdate run
    environment:
      - *timezone-env-var
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    volumes:
      - ./config/cloudflared:/etc/cloudflared
  gerbil:
    image: fosrl/gerbil:1.0.0
    hostname: gerbil
    <<: [*common-config, *common-network]
    profiles: ["dev"]
    depends_on:
      pangolin:
        condition: service_healthy
    command:
      - --reachableAt=http://gerbil:3003
      - --generateAndSaveKeyTo=/var/config/key
      - --remoteConfig=http://pangolin:3001/api/v1/gerbil/get-config
      - --reportBandwidthTo=http://pangolin:3001/api/v1/gerbil/receive-bandwidth
    environment:
      - *timezone-env-var
    volumes:
      - ./config/pangolin:/var/config
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - 51820:51820/udp
  traefik:
    image: traefik:v3.4.0
    hostname: traefik
    # network_mode: service:gerbil # Ports appear on the gerbil service
    <<: [*common-config, *common-network]
    profiles: ["dev"]
    depends_on:
      pangolin:
        condition: service_healthy
    environment:
      - *timezone-env-var
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      # - LEGO_DISABLE_CNAME_SUPPORT=true
    command:
      - --configFile=/etc/traefik/traefik_config.yml
    volumes:
      - ./config/pangolin/traefik:/etc/traefik:ro
      - ./config/pangolin/letsencrypt:/letsencrypt
    ports:
      - 8080:8080

  # duplicati:
  #   image: lscr.io/linuxserver/duplicati:latest
  #   hostname: duplicati
  #   <<: *common-config
  #   user: 1000:1000
  #   environment:
  #     - *timezone-env-var
  #     - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_ENC_KEY}
  #   volumes:
  #     # - ./config:/source
  #     - ./compose.yml:/source/docker-compose.yml
  #     - ./config/duplicati/config:/config
  #     - ./config/duplicati/restore:/restore
  #   networks:
  #     - bridge_net_1
  #   ports:
  #     - 7001:8200
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    hostname: transmission
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
      # - TRANSMISSION_WEB_HOME= #optional
      - USER=mediaserver
      - PASS=pass@123
      # - WHITELIST= #optional
      # - PEERPORT= #optional
      # - HOST_WHITELIST= #optional
    volumes:
      - ./config/transmission:/config
      - *common-download-volume
    networks:
      - bridge_net_1
    ports:
      - 7002:9091
      - 51413:51413
      - 51413:51413/udp
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    hostname: nzbget
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
      - NZBGET_USER=mediaserver
      - NZBGET_PASS=pass@123
    volumes:
      - ./config/nzbget:/config
      - *common-download-volume
    networks:
      - bridge_net_1
    ports:
      - 7003:6789
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    hostname: qbittorrent
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - *common-download-volume
    networks:
      - bridge_net_1
    ports:
      - 7004:8080
      - 6881:6881/tcp
      - 6881:6881/udp
  postgres:
    image: postgres:15
    hostname: postgres
    <<: *common-config
    environment:
      PGUSER: mealie
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: pass@123
    volumes:
      - ./config/mealie/pgdata:/var/lib/postgresql/data
    networks:
      - bridge_net_1
    ports:
      - 7005:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
  mealie:
    image: ghcr.io/mealie-recipes/mealie:v2.8.0
    hostname: mealie
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
      - ALLOW_SIGNUP=false
      - BASE_URL=https://mealie.yourdomain.com
      - DB_ENGINE=postgres
      - POSTGRES_USER=mealie
      - POSTGRES_PASSWORD=pass@123
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mealie
    volumes:
      - ./config/mealie/appdata:/app/data/
    networks:
      - bridge_net_1
    ports:
      - 7101:9000
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1000M
    depends_on:
      - postgres
  # jellyfin:
  #   image: jellyfin/jellyfin
  #   <<: *common-logging
  #   hostname: jellyfin
  #   user: 1000:1000
  #   environment:
  #     - *timezone-env-var
  #     - JELLYFIN_CACHE_DIR=/var/cache/jellyfin
  #     - JELLYFIN_CONFIG_DIR=/etc/jellyfin
  #     - JELLYFIN_DATA_DIR=/var/lib/jellyfin
  #     - JELLYFIN_LOG_DIR=/var/log/jellyfin
  #   volumes:
  #     - ./config/jellyfin/etc:/etc/jellyfin
  #     - ./config/jellyfin/var-cache:/var/cache/jellyfin
  #     - ./config/jellyfin/var-lib:/var/lib/jellyfin
  #     - ./config/jellyfin/var-log:/var/log/jellyfin
  #     - ./config/jellyfin/timezone:/etc/timezone
  #   group_add:
  #     - "109"
  #   network_mode: "host"
  #   ports:
  #     - 8000:8096
  #   devices:
  #     - /dev/dri/renderD128:/dev/dri/renderD128
  prowlarr:
    image: linuxserver/prowlarr:latest
    hostname: prowlarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/prowlarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8002:9696
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    hostname: radarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/radarr:/config
      - *common-download-volume
      - *common-media-volume
    networks:
      - bridge_net_1
    ports:
      - 8101:7878
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    hostname: sonarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/sonarr:/config
      - *common-download-volume
      - *common-media-volume
    networks:
      - bridge_net_1
    ports:
      - 8102:8989
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    hostname: lidarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/lidarr:/config
      - *common-download-volume
      - *common-media-volume
    networks:
      - bridge_net_1
    ports:
      - 8103:8686
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    hostname: readarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/readarr:/config
      - *common-download-volume
      - *common-media-volume
    networks:
      - bridge_net_1
    ports:
      - 8104:8787
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    hostname: bazarr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/bazarr:/config
      - *common-download-volume
      - *common-media-volume
    networks:
      - bridge_net_1
    ports:
      - 8201:6767
    depends_on:
      - radarr
      - sonarr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    hostname: jellyseerr
    <<: *common-config
    user: 1000:1000
    environment:
      - *timezone-env-var
    volumes:
      - ./config/jellyseerr:/app/config
    networks:
      - bridge_net_1
    ports:
      - 8202:5055
    depends_on:
      - radarr
      - sonarr
  # lunasea:
  #   image: ghcr.io/jagandeepbrar/lunasea:stable
  #   hostname: lunasea
  #   <<: *common-config
  #   user: 1000:1000
  #   environment:
  #     - *timezone-env-var
  #   volumes:
  #     - ./config/lunasea:/config
  #   networks:
  #     - bridge_net_1
  #   ports:
  #     - 8203:80
  #   depends_on:
  #     - radarr
  #     - sonarr
  #     - lidarr
  #     - readarr
  
networks:
  bridge_net_1:
    driver: bridge
    attachable: true
