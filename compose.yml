version: "3.8"

x-common-config:
  &common-config
  networks:
    - bridge_net_1
  # restart: unless-stopped

x-common-user-config:
  &common-config
  user: 1000:1000
  networks:
    - bridge_net_1
  restart: unless-stopped


services:
  # duplicati:
  #   image: lscr.io/linuxserver/duplicati:latest
  #   hostname: duplicati
  #   user: 1000:1000
  #   environment:
  #     - TZ=Etc/UTC
  #     - SETTINGS_ENCRYPTION_KEY=282856f2d220e36db5d0ba02dec3f8288ae4b76630de47edb597ed651d3e30fc
  #   volumes:
  #     # - ./config:/source
  #     - ./compose.yml:/source/docker-compose.yml
  #     - ./config/duplicati/config:/config
  #     - ./config/duplicati/restore:/restore
  #   networks:
  #     - bridge_net_1
  #   ports:
  #     - 7001:8200
  #   restart: unless-stopped
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    hostname: transmission
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
      # - TRANSMISSION_WEB_HOME= #optional
      - USER=mediaserver
      - PASS=pass@123
      # - WHITELIST= #optional
      # - PEERPORT= #optional
      # - HOST_WHITELIST= #optional
    volumes:
      - ./config/transmission:/config
      # - /path/to/downloads:/downloads #optional
      # - /path/to/watch/folder:/watch #optional
    networks:
      - bridge_net_1
    ports:
      - 7002:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
  # jellyfin:
  #   image: jellyfin/jellyfin
  #   hostname: jellyfin
  #   user: 1000:1000
  #   environment:
  #     - JELLYFIN_CACHE_DIR=/var/cache/jellyfin
  #     - JELLYFIN_CONFIG_DIR=/etc/jellyfin
  #     - JELLYFIN_DATA_DIR=/var/lib/jellyfin
  #     - JELLYFIN_LOG_DIR=/var/log/jellyfin
  #     - TZ=Etc/UTC
  #   volumes:
  #     - ./config/jellyfin/etc:/etc/jellyfin
  #     - ./config/jellyfin/var-cache:/var/cache/jellyfin
  #     - ./config/jellyfin/var-lib:/var/lib/jellyfin
  #     - ./config/jellyfin/var-log:/var/log/jellyfin
  #     - ./config/jellyfin/timezone:/etc/timezone
  #   group_add:
  #     - "109"
  #   network_mode: "host"
  #   ports:
  #     - 8000:8096
  #   devices:
  #     - /dev/dri/renderD128:/dev/dri/renderD128
  #   restart: unless-stopped
  prowlarr:
    image: linuxserver/prowlarr:latest
    hostname: prowlarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/prowlarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8002:9696
    restart: unless-stopped
    # depends_on:
    #   - flaresolverr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    hostname: radarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/radarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8101:7878
    restart: unless-stopped
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    hostname: sonarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/sonarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8102:8989
    restart: unless-stopped
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    hostname: lidarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/lidarr/:/config/
    networks:
      - bridge_net_1
    ports:
      - 8103:8686
    restart: unless-stopped
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    hostname: readarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/readarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8104:8787
    restart: unless-stopped
    depends_on:
      # - jellyfin
      - transmission
      - prowlarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    hostname: bazarr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/bazarr:/config
    networks:
      - bridge_net_1
    ports:
      - 8201:6767
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    hostname: jellyseerr
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
    volumes:
      - ./config/jellyseerr:/app/config
    networks:
      - bridge_net_1
    ports:
      - 8202:5055
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
  # lunasea:
  #   image: ghcr.io/jagandeepbrar/lunasea:stable
  #   hostname: lunasea
  #   user: 1000:1000
  #   environment:
  #     - TZ=Etc/UTC
  #   volumes:
  #     - ./config/lunasea:/config
  #   networks:
  #     - bridge_net_1
  #   ports:
  #     - 8203:80
  #   restart: unless-stopped
  #   depends_on:
  #     - radarr
  #     - sonarr
  #     - lidarr
  #     - readarr
  homarr:
    image: ghcr.io/homarr-labs/homarr:latest
    hostname: homarr
    environment:
      - SECRET_ENCRYPTION_KEY=282856f2d220e36db5d0ba02dec3f8288ae4b76630de47edb597ed651d3e30fc # TODO: regenerate with `openssl rand -hex 32`
    volumes:
      - ./custom_entrypoint.sh/:/data/
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/homarr/appdata:/appdata
    networks:
      - bridge_net_1
    ports:
      - '8080:7575'
    # secrets:
    #   - homarr_enc_key
    # entrypoint: source /data/custom_entrypoint.sh
    restart: unless-stopped

networks:
  bridge_net_1:
    driver: bridge
    attachable: true

# secrets:
#   homarr_enc_key:
#      external: true
