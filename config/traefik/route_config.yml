http:
  middlewares:
    redirect-to-https:
      redirectScheme:
        scheme: https

  routers:
    # Redirect all HTTP traffic for this host - HIGHEST priority on HTTP
    main-app-router-redirect:
      rule: 'Host(`pangolin.localserver.stream`)'
      service: next-service
      entryPoints:
        - web
      middlewares:
        - redirect-to-https
      priority: 200

    # WebSocket router - HIGH priority on HTTPS for its specific path
    ws-specific-router:
      rule: 'Host(`pangolin.localserver.stream`) && PathPrefix(`/api/v1/ws`)' # e.g., /api/v1/ws OR /ws
      service: ws-service
      entryPoints:
        - web 
        - websecure
      tls:
        certResolver: letsencrypt
      priority: 100

    # API router - Medium priority on HTTPS
    api-router:
      rule: 'Host(`pangolin.localserver.stream`) && PathPrefix(`/api/v1`)' # This will NOT match /api/v1/websocket_endpoint if ws-specific-router matches it first
      service: api-service
      entryPoints:
        - web 
        - websecure
      tls:
        certResolver: letsencrypt
      priority: 50

    # Next.js router (catch-all for remaining HTTPS traffic) - Default/Lower priority on HTTPS
    next-router:
      rule: 'Host(`pangolin.localserver.stream`)'
      service: next-service
      entryPoints:
        - web 
        - websecure
      tls:
        certResolver: letsencrypt
      priority: 10

  services:
    next-service:
      loadBalancer:
        servers:
          - url: 'http://pangolin:3002' # Frontend

    api-service:
      loadBalancer:
        servers:
          - url: 'http://pangolin:3000' # Backend API handler

    ws-service:
      loadBalancer:
        servers:
          - url: 'http://pangolin:3000' # WebSocket handler
